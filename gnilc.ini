#Config file for GNILC
[Defaults]

## Output directory
work_dir = NILC_OUT/

## Input directory
input_dir = Data/

## Noise directory (Optional). Must be specified for foreground estimation
noise_dir = Data/

## Names of the frequency channels
channels = 030GHz, 044GHz, 070GHz, 100GHz, 143GHz, 217GHz, 353GHz

## Input maps (healpix.fits format)
inmaps = map_030.fits, map_044.fits, map_070.fits, map_100.fits, map_143.fits, map_217.fits, map_353.fits

## Noise maps (Optional). Must be specified for foreground estimation
noises = noise_030.fits, noise_044.fits, noise_070.fits, noise_100.fits, noise_143.fits, noise_217.fits, noise_353.fits

## (Optional) If specified a prior on CMB power spectra is used for foreground estimation (see cl_lensed.r0.txt file for format)
#prior_cl = cl_lensed_r0.txt

## (Optional) If specified a filtering transfer function is applied to prior_cl (see fl_transfer.txt file for format)
#transfer_function = fl_transfer.txt

## Multipole centers of cosine window functions for needlet bands
band_centers = 0, 20, 45, 70, 95, 120, 145, 195, 220, 270, 320, 370, 445

## Angular resolutions (in arcmins) of gaussian window functions for needlets. (Overwrites band_centers)
#band_resolutions = 300, 120, 60, 45, 30, 15, 10, 7.5, 5

## Angular resolutions of input maps in arcmins
beams = 33, 24, 14, 10, 7.1, 5.5, 5

## Beam profiles of input maps as numpy arrays. (Overwrites beams)
beam_files = bl_030GHz.npy, bl_044GHz.npy, bl_070GHz.npy, bl_100GHz.npy, bl_143GHz.npy, bl_217GHz.npy, bl_353GHz.npy

## Beam floor value (default=0.01)
bl_frac = 0.01

## Polarization (can be I, QU, or IQU)
pol = IQU

## Nside of needlet maps (default=512)
nside_out = 512

## Maximum multipole used for the analysis (default=512)
lmax_out = 512

## Smoothing resolution (arcmin). If specified all input maps are smoothed to "smooth_beam" resolution (default=0)
smooth_beam = 0

## upper bound for ILC bias used to determine covariance domain sizes (default=0.03)
ilc_bias = 0.03

## Order of the neighborhood in pixel space for covariance estimation
neighborhood = 2

## Largest angular scale used for the analysis. Default is determined by the 2nd needlet band. Use "fullsky" 
## if input maps are full-sky maps
first_scale = fullsky

## Number of smallest scales omitted from the analysis (default=0)
last_window = 0

## Information criterion method. Can be 0, 1, or 2 (default=2). Use Akaike method (option 2) for best performance
aic_mod = 2

## Output covariance matrices (default=False)
write_covariance = False

## If True foreground mode is on, else only CMB estimation done. (Default=False)
do_foregrounds = False

## If True project out the modes parallel to CMB. If False CMB is treated as noise (prior_cl is required). (Default=True)
project_fg = True

## If specifed the weightS are read from previous run
#weights_dir = NILC_OUT/

## If true a mask is applied to input maps (default=False)
masking = False

## Size of the Galactic region to be masked (default=5 degrees)
mask_size = 5
## Apodization length of the Galactic mask (default=2 degrees)
mask_transition = 2

## Mask file in HealPix FITS format (overwrites the simple Galactic region mask defined by mask_size and mask_transition)
mask_file = Data/mask.fits

## EXPERIMENTAL
## Uses Ludwig III cross-polarization for an attempt to increase the sensitivity
do_ludwig = no
#ludwig_maps = ILC_FG_30GHz.fits, ILC_FG_44GHz.fits, ILC_FG_70GHz.fits, ILC_FG_100GHz.fits, ILC_FG_143GHz.fits, ILC_FG_217GHz.fits, ILC_FG_353GHz.fits
#ludwig_noises = ludwig_noise_030GHz.fits, ludwig_noise_044GHz.fits, ludwig_noise_070GHz.fits, ludwig_noise_100GHz.fits, ludwig_noise_143GHz.fits, ludwig_noise_217GHz.fits, ludwig_noise_353GHz.fits
#ludwig_beams = 33, 24, 14, 10, 7.1, 5.5, 5
#cmbs = cmb_030.fits, cmb_044.fits, cmb_070.fits, cmb_100.fits, cmb_143.fits, cmb_217.fits, cmb_353.fits
#firbs = firb_030.fits, firb_044.fits, firb_070.fits, firb_100.fits, firb_143.fits, firb_217.fits, firb_353.fits
#pfrac = 0.1

